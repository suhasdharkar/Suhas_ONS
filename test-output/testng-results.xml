<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-10-20T10:36:41 IST" name="Suite" finished-at="2022-10-20T10:37:12 IST" duration-ms="30845">
    <groups>
    </groups>
    <test started-at="2022-10-20T10:36:41 IST" name="chromeTest" finished-at="2022-10-20T10:37:12 IST" duration-ms="30845">
      <class name="testClasses.VerifyUserCanLogin">
        <test-method is-config="true" signature="beforeClass(java.lang.String)[pri:0, instance:testClasses.VerifyUserCanLogin@55141def]" started-at="2022-10-20T10:36:41 IST" name="beforeClass" finished-at="2022-10-20T10:36:56 IST" duration-ms="14602" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testClasses.VerifyUserCanLogin@55141def]" started-at="2022-10-20T10:36:56 IST" name="beforeMethod" finished-at="2022-10-20T10:36:56 IST" duration-ms="60" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="userLogin()[pri:0, instance:testClasses.VerifyUserCanLogin@55141def]" started-at="2022-10-20T10:36:56 IST" name="userLogin" finished-at="2022-10-20T10:36:59 IST" duration-ms="3387" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.VerifyUserCanLogin@55141def]" started-at="2022-10-20T10:36:59 IST" name="afterMethod" finished-at="2022-10-20T10:37:00 IST" duration-ms="1084" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLogin status=SUCCESS method=VerifyUserCanLogin.userLogin()[pri:0, instance:testClasses.VerifyUserCanLogin@55141def] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testClasses.VerifyUserCanLogin@55141def]" started-at="2022-10-20T10:37:00 IST" name="afterClass" finished-at="2022-10-20T10:37:01 IST" duration-ms="542" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testClasses.VerifyUserCanLogin -->
      <class name="testClasses.UserCanGetLowestPrice">
        <test-method is-config="true" signature="beforeClass(java.lang.String)[pri:0, instance:testClasses.UserCanGetLowestPrice@7b98f307]" started-at="2022-10-20T10:37:01 IST" name="beforeClass" finished-at="2022-10-20T10:37:01 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testClasses.UserCanGetLowestPrice@7b98f307]" started-at="2022-10-20T10:37:01 IST" name="beforeMethod" finished-at="2022-10-20T10:37:01 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getLowestPriceProduct()[pri:0, instance:testClasses.UserCanGetLowestPrice@7b98f307]" started-at="2022-10-20T10:37:01 IST" name="getLowestPriceProduct" finished-at="2022-10-20T10:37:11 IST" duration-ms="10068" status="FAIL">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index 0 out of bounds for length 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0
at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)
at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)
at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)
at java.base/java.util.Objects.checkIndex(Objects.java:359)
at java.base/java.util.ArrayList.get(ArrayList.java:427)
at pomClasses.Homepage.getLowestPrice(Homepage.java:55)
at testClasses.UserCanGetLowestPrice.getLowestPriceProduct(UserCanGetLowestPrice.java:61)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getLowestPriceProduct -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.UserCanGetLowestPrice@7b98f307]" started-at="2022-10-20T10:37:11 IST" name="afterMethod" finished-at="2022-10-20T10:37:12 IST" duration-ms="940" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getLowestPriceProduct status=FAILURE method=UserCanGetLowestPrice.getLowestPriceProduct()[pri:0, instance:testClasses.UserCanGetLowestPrice@7b98f307] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testClasses.UserCanGetLowestPrice@7b98f307]" started-at="2022-10-20T10:37:12 IST" name="afterClass" finished-at="2022-10-20T10:37:12 IST" duration-ms="64" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testClasses.UserCanGetLowestPrice -->
    </test> <!-- chromeTest -->
  </suite> <!-- Suite -->
</testng-results>
